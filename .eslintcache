[{"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/App.js":"1","/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/reportWebVitals.js":"2","/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/components/Header.js":"3","/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/components/Footer.js":"4","/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/index.js":"5"},{"size":735,"mtime":1612483342253,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611893257201,"results":"8","hashOfConfig":"7"},{"size":223,"mtime":1612030772739,"results":"9","hashOfConfig":"7"},{"size":218,"mtime":1612029734332,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1611893257201,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18edt6b",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/App.js",["22"],"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/reportWebVitals.js",[],"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/components/Header.js",[],"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/components/Footer.js",[],"/Users/owner/Desktop/webDev/codeProjects/bridge_beyond/bridge_beyond_client/src/index.js",[],{"ruleId":"23","severity":1,"message":"24","line":11,"column":13,"nodeType":"25","endLine":17,"endColumn":4},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]